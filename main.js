!function(){"use strict";var t=class{constructor(t,e,s){this._name=t.name,this._link=t.link,this._cardSelector=e,this._handleImagePreview=s}_handleLikeButton(){this._likeButton.classList.toggle("card__like-button_active")}_handleTrashButton(){this._cardElement.remove(),this._cardElement=null}_setEventListeners(){this._likeButton=this._cardElement.querySelector(".card__like-button"),this._trashButton=this._cardElement.querySelector(".card__trash-button"),this._likeButton.addEventListener("click",(()=>this._handleLikeButton())),this._trashButton.addEventListener("click",(()=>this._handleTrashButton())),this._imageElement.addEventListener("click",(()=>{this._handleImagePreview({name:this._name,link:this._link})}))}_handleImageClick(){this._handleImagePreview&&this._handleImagePreview({name:this._name,link:this._link})}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return console.log("card image source",this._link),this._cardElement=this._getTemplate(),this._imageElement=this._cardElement.querySelector(".card__image"),this._titleElement=this._cardElement.querySelector(".card__title"),this._imageElement.src=this._link,this._imageElement.alt=this._name,this._titleElement.textContent=this._name,this._setEventListeners(),this._cardElement}},e=class{constructor(t,e){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=e}_showInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_toggleButtonState(){let t=!1;this._inputEls.forEach((e=>{e.validity.valid||(t=!0)})),t?this.disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_hasInvalidInput(){return!this._inputEls.every((t=>t.validity.valid))}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((t=>{t.addEventListener("input",(e=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputEls.forEach((t=>this._hideInputError(t))),this._toggleButtonState()}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}};const s="#card-template",n={inputSelector:".form__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"modal__error_visible"};class i{constructor(t){this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(t){"Escape"===t.key&&this.close()}setEventListeners(){this._popup.addEventListener("mousedown",(t=>{(t.target.classList.contains("modal_opened")||t.target.classList.contains("modal__close"))&&this.close()}))}}class r extends i{constructor(t,e){super(t),this._handleFormSubmit=e,this._form=this._popup.querySelector(".modal__form"),this._inputList=this._form.querySelectorAll(".form__input")}_getInputValues(){const t={};return this._inputList.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}close(){super.close(),this._form.reset()}}const o=new i("#preview-image-modal");function a(t){let{name:e,link:s}=t;console.log("preview data",{name:e,link:s}),f.src=s,f.alt=e,L.textContent=e,o.open()}o.setEventListeners();const l=new r("#profile-edit-modal",(t=>{console.log("Profile Edit Form Submitted:",t),_.textContent=t["profile-title"],m.textContent=t["profile-description"]})),c=new r("#add-card-modal",(e=>{const{title:n,url:i}=e;if(!n||!i)return void console.error("ðŸš¨ Card title and image URL are required.");const r=new t({name:n,link:i},s,a);u.addItem(r.getView()),c.close()}));c.setEventListeners(),l.setEventListeners();const u=new class{constructor(t,e){let{items:s,renderer:n}=t;this._items=s,this._renderer=n,this._container=document.querySelector(e)}renderItems(){this._items.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.prepend(t)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const n=new t(e,s,a).getView();u.addItem(n)}},".gallery__cards");u.renderItems();const d=document.querySelector("#profile-edit-button"),_=document.querySelector(".profile__title"),m=document.querySelector(".profile__description"),h=document.querySelector("#profile-title-input"),p=document.querySelector("#profile-description-input"),E=l._form,v=(document.querySelector(".gallery__cards"),document.querySelector("#profile-add-button")),g=c._form,f=(g.querySelector("#card-title-input"),g.querySelector("#card-url-input"),o._popup.querySelector("#modal-image")),L=o._popup.querySelector("#modal-caption"),S=g,w=new e(n,E),y=new e(n,S);w.enableValidation(),y.enableValidation(),document.querySelectorAll(".modal__close").forEach((t=>{const e=t.closest(".modal");t.addEventListener("click",(()=>closePopUp(e)))})),d.addEventListener("click",(()=>{h.value=_.textContent,p.value=m.textContent,l.open()})),v.addEventListener("click",(()=>c.open())),E.addEventListener("submit",(function(t){t.preventDefault(),_.textContent=h.value,m.textContent=p.value,l.close()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,